// Generated from ./src/lang/SourCLexer.g4 by ANTLR 4.9.0-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN'
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer'
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator'
import { CharStream } from 'antlr4ts/CharStream'
import { NotNull } from 'antlr4ts/Decorators'
import { Override } from 'antlr4ts/Decorators'
import { Lexer } from 'antlr4ts/Lexer'
import * as Utils from 'antlr4ts/misc/Utils'
import { RuleContext } from 'antlr4ts/RuleContext'
import { Vocabulary } from 'antlr4ts/Vocabulary'
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl'

export class SourCLexer extends Lexer {
  public static readonly Break = 1
  public static readonly Char = 2
  public static readonly Const = 3
  public static readonly Continue = 4
  public static readonly Do = 5
  public static readonly Double = 6
  public static readonly Else = 7
  public static readonly Float = 8
  public static readonly For = 9
  public static readonly If = 10
  public static readonly Int = 11
  public static readonly Long = 12
  public static readonly Return = 13
  public static readonly Short = 14
  public static readonly Signed = 15
  public static readonly Sizeof = 16
  public static readonly Struct = 17
  public static readonly Union = 18
  public static readonly Unsigned = 19
  public static readonly Void = 20
  public static readonly While = 21
  public static readonly LeftParen = 22
  public static readonly RightParen = 23
  public static readonly LeftBracket = 24
  public static readonly RightBracket = 25
  public static readonly LeftBrace = 26
  public static readonly RightBrace = 27
  public static readonly Less = 28
  public static readonly LessEqual = 29
  public static readonly Greater = 30
  public static readonly GreaterEqual = 31
  public static readonly LeftShift = 32
  public static readonly RightShift = 33
  public static readonly Plus = 34
  public static readonly PlusPlus = 35
  public static readonly Minus = 36
  public static readonly MinusMinus = 37
  public static readonly Star = 38
  public static readonly Div = 39
  public static readonly Mod = 40
  public static readonly And = 41
  public static readonly AndAnd = 42
  public static readonly OrOr = 43
  public static readonly Not = 44
  public static readonly Question = 45
  public static readonly Colon = 46
  public static readonly Semi = 47
  public static readonly Comma = 48
  public static readonly Assign = 49
  public static readonly StarAssign = 50
  public static readonly DivAssign = 51
  public static readonly ModAssign = 52
  public static readonly PlusAssign = 53
  public static readonly MinusAssign = 54
  public static readonly Equal = 55
  public static readonly NotEqual = 56
  public static readonly Arrow = 57
  public static readonly Dot = 58
  public static readonly UnaryOperator = 59
  public static readonly TypeName = 60
  public static readonly Identifier = 61
  public static readonly Constant = 62
  public static readonly DigitSequence = 63
  public static readonly StringLiteral = 64
  public static readonly ComplexDefine = 65
  public static readonly IncludeDirective = 66
  public static readonly AsmBlock = 67
  public static readonly LineAfterPreprocessing = 68
  public static readonly LineDirective = 69
  public static readonly PragmaDirective = 70
  public static readonly Whitespace = 71
  public static readonly Newline = 72
  public static readonly BlockComment = 73
  public static readonly LineComment = 74

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN']

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE']

  public static readonly ruleNames: string[] = [
    'Break',
    'Char',
    'Const',
    'Continue',
    'Do',
    'Double',
    'Else',
    'Float',
    'For',
    'If',
    'Int',
    'Long',
    'Return',
    'Short',
    'Signed',
    'Sizeof',
    'Struct',
    'Union',
    'Unsigned',
    'Void',
    'While',
    'LeftParen',
    'RightParen',
    'LeftBracket',
    'RightBracket',
    'LeftBrace',
    'RightBrace',
    'Less',
    'LessEqual',
    'Greater',
    'GreaterEqual',
    'LeftShift',
    'RightShift',
    'Plus',
    'PlusPlus',
    'Minus',
    'MinusMinus',
    'Star',
    'Div',
    'Mod',
    'And',
    'AndAnd',
    'OrOr',
    'Not',
    'Question',
    'Colon',
    'Semi',
    'Comma',
    'Assign',
    'StarAssign',
    'DivAssign',
    'ModAssign',
    'PlusAssign',
    'MinusAssign',
    'Equal',
    'NotEqual',
    'Arrow',
    'Dot',
    'UnaryOperator',
    'TypeName',
    'Identifier',
    'IdentifierNondigit',
    'Nondigit',
    'Digit',
    'UniversalCharacterName',
    'HexQuad',
    'Constant',
    'IntegerConstant',
    'BinaryConstant',
    'DecimalConstant',
    'OctalConstant',
    'HexadecimalConstant',
    'HexadecimalPrefix',
    'NonzeroDigit',
    'OctalDigit',
    'HexadecimalDigit',
    'IntegerSuffix',
    'UnsignedSuffix',
    'LongSuffix',
    'LongLongSuffix',
    'FloatingConstant',
    'DecimalFloatingConstant',
    'HexadecimalFloatingConstant',
    'FractionalConstant',
    'ExponentPart',
    'Sign',
    'DigitSequence',
    'HexadecimalFractionalConstant',
    'BinaryExponentPart',
    'HexadecimalDigitSequence',
    'FloatingSuffix',
    'CharacterConstant',
    'CCharSequence',
    'CChar',
    'EscapeSequence',
    'SimpleEscapeSequence',
    'OctalEscapeSequence',
    'HexadecimalEscapeSequence',
    'StringLiteral',
    'EncodingPrefix',
    'SCharSequence',
    'SChar',
    'ComplexDefine',
    'IncludeDirective',
    'AsmBlock',
    'LineAfterPreprocessing',
    'LineDirective',
    'PragmaDirective',
    'Whitespace',
    'Newline',
    'BlockComment',
    'LineComment'
  ]

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "'break'",
    "'char'",
    "'const'",
    "'continue'",
    "'do'",
    "'double'",
    "'else'",
    "'float'",
    "'for'",
    "'if'",
    "'int'",
    "'long'",
    "'return'",
    "'short'",
    "'signed'",
    "'sizeof'",
    "'struct'",
    "'union'",
    "'unsigned'",
    "'void'",
    "'while'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "'<'",
    "'<='",
    "'>'",
    "'>='",
    "'<<'",
    "'>>'",
    "'+'",
    "'++'",
    "'-'",
    "'--'",
    "'*'",
    "'/'",
    "'%'",
    "'&'",
    "'&&'",
    "'||'",
    "'!'",
    "'?'",
    "':'",
    "';'",
    "','",
    "'='",
    "'*='",
    "'/='",
    "'%='",
    "'+='",
    "'-='",
    "'=='",
    "'!='",
    "'->'",
    "'.'"
  ]
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    'Break',
    'Char',
    'Const',
    'Continue',
    'Do',
    'Double',
    'Else',
    'Float',
    'For',
    'If',
    'Int',
    'Long',
    'Return',
    'Short',
    'Signed',
    'Sizeof',
    'Struct',
    'Union',
    'Unsigned',
    'Void',
    'While',
    'LeftParen',
    'RightParen',
    'LeftBracket',
    'RightBracket',
    'LeftBrace',
    'RightBrace',
    'Less',
    'LessEqual',
    'Greater',
    'GreaterEqual',
    'LeftShift',
    'RightShift',
    'Plus',
    'PlusPlus',
    'Minus',
    'MinusMinus',
    'Star',
    'Div',
    'Mod',
    'And',
    'AndAnd',
    'OrOr',
    'Not',
    'Question',
    'Colon',
    'Semi',
    'Comma',
    'Assign',
    'StarAssign',
    'DivAssign',
    'ModAssign',
    'PlusAssign',
    'MinusAssign',
    'Equal',
    'NotEqual',
    'Arrow',
    'Dot',
    'UnaryOperator',
    'TypeName',
    'Identifier',
    'Constant',
    'DigitSequence',
    'StringLiteral',
    'ComplexDefine',
    'IncludeDirective',
    'AsmBlock',
    'LineAfterPreprocessing',
    'LineDirective',
    'PragmaDirective',
    'Whitespace',
    'Newline',
    'BlockComment',
    'LineComment'
  ]
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    SourCLexer._LITERAL_NAMES,
    SourCLexer._SYMBOLIC_NAMES,
    []
  )

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return SourCLexer.VOCABULARY
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input)
    this._interp = new LexerATNSimulator(SourCLexer._ATN, this)
  }

  // @Override
  public get grammarFileName(): string {
    return 'SourCLexer.g4'
  }

  // @Override
  public get ruleNames(): string[] {
    return SourCLexer.ruleNames
  }

  // @Override
  public get serializedATN(): string {
    return SourCLexer._serializedATN
  }

  // @Override
  public get channelNames(): string[] {
    return SourCLexer.channelNames
  }

  // @Override
  public get modeNames(): string[] {
    return SourCLexer.modeNames
  }

  private static readonly _serializedATNSegments: number = 2
  private static readonly _serializedATNSegment0: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02L\u038C\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
    '4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04' +
    '=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04' +
    'F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04' +
    'O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04' +
    'X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t' +
    '`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04' +
    'i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04p\tp\x04q\tq\x03' +
    '\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03' +
    '\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03' +
    '\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03' +
    '\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03' +
    '\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03' +
    '\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E' +
    '\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10' +
    '\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11' +
    '\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12' +
    '\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14' +
    '\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15' +
    '\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17' +
    '\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B' +
    '\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F' +
    '\x03 \x03 \x03 \x03!\x03!\x03!\x03"\x03"\x03"\x03#\x03#\x03$\x03$\x03' +
    "$\x03%\x03%\x03&\x03&\x03&\x03'\x03'\x03(\x03(\x03)\x03)\x03*\x03*\x03" +
    '+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x03' +
    '1\x031\x032\x032\x033\x033\x033\x034\x034\x034\x035\x035\x035\x036\x03' +
    '6\x036\x037\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03' +
    ';\x03;\x03<\x03<\x03<\x03<\x03<\x05<\u01BE\n<\x03=\x03=\x03=\x03=\x03' +
    '=\x03=\x05=\u01C6\n=\x03>\x03>\x03>\x07>\u01CB\n>\f>\x0E>\u01CE\v>\x03' +
    '?\x03?\x05?\u01D2\n?\x03@\x03@\x03A\x03A\x03B\x03B\x03B\x03B\x03B\x03' +
    'B\x03B\x03B\x03B\x03B\x05B\u01E2\nB\x03C\x03C\x03C\x03C\x03C\x03D\x03' +
    'D\x03D\x05D\u01EC\nD\x03E\x03E\x05E\u01F0\nE\x03E\x03E\x05E\u01F4\nE\x03' +
    'E\x03E\x05E\u01F8\nE\x03E\x05E\u01FB\nE\x03F\x03F\x03F\x06F\u0200\nF\r' +
    'F\x0EF\u0201\x03G\x03G\x07G\u0206\nG\fG\x0EG\u0209\vG\x03H\x03H\x07H\u020D' +
    '\nH\fH\x0EH\u0210\vH\x03I\x03I\x06I\u0214\nI\rI\x0EI\u0215\x03J\x03J\x03' +
    'J\x03K\x03K\x03L\x03L\x03M\x03M\x03N\x03N\x05N\u0223\nN\x03N\x03N\x03' +
    'N\x03N\x03N\x05N\u022A\nN\x03N\x03N\x05N\u022E\nN\x05N\u0230\nN\x03O\x03' +
    'O\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x05Q\u023A\nQ\x03R\x03R\x05R\u023E\nR' +
    '\x03S\x03S\x05S\u0242\nS\x03S\x05S\u0245\nS\x03S\x03S\x03S\x05S\u024A' +
    '\nS\x05S\u024C\nS\x03T\x03T\x03T\x05T\u0251\nT\x03T\x03T\x05T\u0255\n' +
    'T\x03U\x05U\u0258\nU\x03U\x03U\x03U\x03U\x03U\x05U\u025F\nU\x03V\x03V' +
    '\x05V\u0263\nV\x03V\x03V\x03W\x03W\x03X\x06X\u026A\nX\rX\x0EX\u026B\x03' +
    'Y\x05Y\u026F\nY\x03Y\x03Y\x03Y\x03Y\x03Y\x05Y\u0276\nY\x03Z\x03Z\x05Z' +
    '\u027A\nZ\x03Z\x03Z\x03[\x06[\u027F\n[\r[\x0E[\u0280\x03\\\x03\\\x03]' +
    '\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x03' +
    ']\x03]\x03]\x03]\x03]\x03]\x03]\x03]\x05]\u029B\n]\x03^\x06^\u029E\n^' +
    '\r^\x0E^\u029F\x03_\x03_\x05_\u02A4\n_\x03`\x03`\x03`\x03`\x05`\u02AA' +
    '\n`\x03a\x03a\x03a\x03b\x03b\x03b\x05b\u02B2\nb\x03b\x05b\u02B5\nb\x03' +
    'c\x03c\x03c\x03c\x06c\u02BB\nc\rc\x0Ec\u02BC\x03d\x05d\u02C0\nd\x03d\x03' +
    'd\x05d\u02C4\nd\x03d\x03d\x03e\x03e\x03e\x05e\u02CB\ne\x03f\x06f\u02CE' +
    '\nf\rf\x0Ef\u02CF\x03g\x03g\x03g\x03g\x03g\x03g\x03g\x05g\u02D9\ng\x03' +
    'h\x03h\x05h\u02DD\nh\x03h\x03h\x03h\x03h\x03h\x03h\x03h\x03h\x07h\u02E7' +
    '\nh\fh\x0Eh\u02EA\vh\x03h\x03h\x03i\x03i\x05i\u02F0\ni\x03i\x03i\x03i' +
    '\x03i\x03i\x03i\x03i\x03i\x03i\x05i\u02FB\ni\x03i\x03i\x07i\u02FF\ni\f' +
    'i\x0Ei\u0302\vi\x03i\x03i\x03i\x07i\u0307\ni\fi\x0Ei\u030A\vi\x03i\x05' +
    'i\u030D\ni\x03i\x05i\u0310\ni\x03i\x03i\x03i\x03i\x03j\x03j\x03j\x03j' +
    '\x03j\x07j\u031B\nj\fj\x0Ej\u031E\vj\x03j\x03j\x07j\u0322\nj\fj\x0Ej\u0325' +
    '\vj\x03j\x03j\x03j\x03j\x03k\x03k\x03k\x03k\x03k\x03k\x03k\x07k\u0332' +
    '\nk\fk\x0Ek\u0335\vk\x03k\x07k\u0338\nk\fk\x0Ek\u033B\vk\x03k\x03k\x03' +
    'l\x03l\x05l\u0341\nl\x03l\x03l\x05l\u0345\nl\x03l\x03l\x07l\u0349\nl\f' +
    'l\x0El\u034C\vl\x03l\x03l\x03m\x03m\x05m\u0352\nm\x03m\x03m\x03m\x03m' +
    '\x03m\x03m\x03m\x03m\x03m\x07m\u035D\nm\fm\x0Em\u0360\vm\x03m\x03m\x03' +
    'n\x06n\u0365\nn\rn\x0En\u0366\x03n\x03n\x03o\x03o\x05o\u036D\no\x03o\x05' +
    'o\u0370\no\x03o\x03o\x03p\x03p\x03p\x03p\x07p\u0378\np\fp\x0Ep\u037B\v' +
    'p\x03p\x03p\x03p\x03p\x03p\x03q\x03q\x03q\x03q\x07q\u0386\nq\fq\x0Eq\u0389' +
    '\vq\x03q\x03q\x03\u0379\x02\x02r\x03\x02\x03\x05\x02\x04\x07\x02\x05\t' +
    '\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17' +
    '\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13' +
    "%\x02\x14'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
    '\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02"C\x02#E\x02' +
    "$G\x02%I\x02&K\x02'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]" +
    '\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02' +
    ';u\x02<w\x02=y\x02>{\x02?}\x02\x02\x7F\x02\x02\x81\x02\x02\x83\x02\x02' +
    '\x85\x02\x02\x87\x02@\x89\x02\x02\x8B\x02\x02\x8D\x02\x02\x8F\x02\x02' +
    '\x91\x02\x02\x93\x02\x02\x95\x02\x02\x97\x02\x02\x99\x02\x02\x9B\x02\x02' +
    '\x9D\x02\x02\x9F\x02\x02\xA1\x02\x02\xA3\x02\x02\xA5\x02\x02\xA7\x02\x02' +
    '\xA9\x02\x02\xAB\x02\x02\xAD\x02\x02\xAF\x02A\xB1\x02\x02\xB3\x02\x02' +
    '\xB5\x02\x02\xB7\x02\x02\xB9\x02\x02\xBB\x02\x02\xBD\x02\x02\xBF\x02\x02' +
    '\xC1\x02\x02\xC3\x02\x02\xC5\x02\x02\xC7\x02B\xC9\x02\x02\xCB\x02\x02' +
    '\xCD\x02\x02\xCF\x02C\xD1\x02D\xD3\x02E\xD5\x02F\xD7\x02G\xD9\x02H\xDB' +
    '\x02I\xDD\x02J\xDF\x02K\xE1\x02L\x03\x02\x19\x05\x02C\\aac|\x03\x022;' +
    '\x04\x02DDdd\x03\x0223\x04\x02ZZzz\x03\x023;\x03\x0229\x05\x022;CHch\x04' +
    '\x02WWww\x04\x02NNnn\x04\x02GGgg\x04\x02--//\x04\x02RRrr\x06\x02HHNNh' +
    'hnn\x06\x02\f\f\x0F\x0F))^^\f\x02$$))AA^^cdhhppttvvxx\x05\x02NNWWww\x06' +
    '\x02\f\f\x0F\x0F$$^^\x05\x02\f\f\x0F\x0F%%\x04\x02\f\f\x0F\x0F\x03\x02' +
    '}}\x03\x02\x7F\x7F\x04\x02\v\v""\x02\u03BC\x02\x03\x03\x02\x02\x02\x02' +
    '\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02' +
    '\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11' +
    '\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17' +
    '\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D' +
    '\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03' +
    "\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02)\x03\x02\x02" +
    '\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x02' +
    '1\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02' +
    '\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02' +
    '\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03' +
    '\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02' +
    '\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02' +
    'S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02' +
    '\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02' +
    '\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03' +
    '\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02' +
    '\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02' +
    'u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02' +
    '\x02\x02\x02\x87\x03\x02\x02\x02\x02\xAF\x03\x02\x02\x02\x02\xC7\x03\x02' +
    '\x02\x02\x02\xCF\x03\x02\x02\x02\x02\xD1\x03\x02\x02\x02\x02\xD3\x03\x02' +
    '\x02\x02\x02\xD5\x03\x02\x02\x02\x02\xD7\x03\x02\x02\x02\x02\xD9\x03\x02' +
    '\x02\x02\x02\xDB\x03\x02\x02\x02\x02\xDD\x03\x02\x02\x02\x02\xDF\x03\x02' +
    '\x02\x02\x02\xE1\x03\x02\x02\x02\x03\xE3\x03\x02\x02\x02\x05\xE9\x03\x02' +
    '\x02\x02\x07\xEE\x03\x02\x02\x02\t\xF4\x03\x02\x02\x02\v\xFD\x03\x02\x02' +
    '\x02\r\u0100\x03\x02\x02\x02\x0F\u0107\x03\x02\x02\x02\x11\u010C\x03\x02' +
    '\x02\x02\x13\u0112\x03\x02\x02\x02\x15\u0116\x03\x02\x02\x02\x17\u0119' +
    '\x03\x02\x02\x02\x19\u011D\x03\x02\x02\x02\x1B\u0122\x03\x02\x02\x02\x1D' +
    '\u0129\x03\x02\x02\x02\x1F\u012F\x03\x02\x02\x02!\u0136\x03\x02\x02\x02' +
    "#\u013D\x03\x02\x02\x02%\u0144\x03\x02\x02\x02'\u014A\x03\x02\x02\x02" +
    ')\u0153\x03\x02\x02\x02+\u0158\x03\x02\x02\x02-\u015E\x03\x02\x02\x02' +
    '/\u0160\x03\x02\x02\x021\u0162\x03\x02\x02\x023\u0164\x03\x02\x02\x02' +
    '5\u0166\x03\x02\x02\x027\u0168\x03\x02\x02\x029\u016A\x03\x02\x02\x02' +
    ';\u016C\x03\x02\x02\x02=\u016F\x03\x02\x02\x02?\u0171\x03\x02\x02\x02' +
    'A\u0174\x03\x02\x02\x02C\u0177\x03\x02\x02\x02E\u017A\x03\x02\x02\x02' +
    'G\u017C\x03\x02\x02\x02I\u017F\x03\x02\x02\x02K\u0181\x03\x02\x02\x02' +
    'M\u0184\x03\x02\x02\x02O\u0186\x03\x02\x02\x02Q\u0188\x03\x02\x02\x02' +
    'S\u018A\x03\x02\x02\x02U\u018C\x03\x02\x02\x02W\u018F\x03\x02\x02\x02' +
    'Y\u0192\x03\x02\x02\x02[\u0194\x03\x02\x02\x02]\u0196\x03\x02\x02\x02' +
    '_\u0198\x03\x02\x02\x02a\u019A\x03\x02\x02\x02c\u019C\x03\x02\x02\x02' +
    'e\u019E\x03\x02\x02\x02g\u01A1\x03\x02\x02\x02i\u01A4\x03\x02\x02\x02' +
    'k\u01A7\x03\x02\x02\x02m\u01AA\x03\x02\x02\x02o\u01AD\x03\x02\x02\x02' +
    'q\u01B0\x03\x02\x02\x02s\u01B3\x03\x02\x02\x02u\u01B6\x03\x02\x02\x02' +
    'w\u01BD\x03\x02\x02\x02y\u01C5\x03\x02\x02\x02{\u01C7\x03\x02\x02\x02' +
    '}\u01D1\x03\x02\x02\x02\x7F\u01D3\x03\x02\x02\x02\x81\u01D5\x03\x02\x02' +
    '\x02\x83\u01E1\x03\x02\x02\x02\x85\u01E3\x03\x02\x02\x02\x87\u01EB\x03' +
    '\x02\x02\x02\x89\u01FA\x03\x02\x02\x02\x8B\u01FC\x03\x02\x02\x02\x8D\u0203' +
    '\x03\x02\x02\x02\x8F\u020A\x03\x02\x02\x02\x91\u0211\x03\x02\x02\x02\x93' +
    '\u0217\x03\x02\x02\x02\x95\u021A\x03\x02\x02\x02\x97\u021C\x03\x02\x02' +
    '\x02\x99\u021E\x03\x02\x02\x02\x9B\u022F\x03\x02\x02\x02\x9D\u0231\x03' +
    '\x02\x02\x02\x9F\u0233\x03\x02\x02\x02\xA1\u0239\x03\x02\x02\x02\xA3\u023D' +
    '\x03\x02\x02\x02\xA5\u024B\x03\x02\x02\x02\xA7\u024D\x03\x02\x02\x02\xA9' +
    '\u025E\x03\x02\x02\x02\xAB\u0260\x03\x02\x02\x02\xAD\u0266\x03\x02\x02' +
    '\x02\xAF\u0269\x03\x02\x02\x02\xB1\u0275\x03\x02\x02\x02\xB3\u0277\x03' +
    '\x02\x02\x02\xB5\u027E\x03\x02\x02\x02\xB7\u0282\x03\x02\x02\x02\xB9\u029A' +
    '\x03\x02\x02\x02\xBB\u029D\x03\x02\x02\x02\xBD\u02A3\x03\x02\x02\x02\xBF' +
    '\u02A9\x03\x02\x02\x02\xC1\u02AB\x03\x02\x02\x02\xC3\u02AE\x03\x02\x02' +
    '\x02\xC5\u02B6\x03\x02\x02\x02\xC7\u02BF\x03\x02\x02\x02\xC9\u02CA\x03' +
    '\x02\x02\x02\xCB\u02CD\x03\x02\x02\x02\xCD\u02D8\x03\x02\x02\x02\xCF\u02DA' +
    '\x03\x02\x02\x02\xD1\u02ED\x03\x02\x02\x02\xD3\u0315\x03\x02\x02\x02\xD5' +
    '\u032A\x03\x02\x02\x02\xD7\u033E\x03\x02\x02\x02\xD9\u034F\x03\x02\x02' +
    '\x02\xDB\u0364\x03\x02\x02\x02\xDD\u036F\x03\x02\x02\x02\xDF\u0373\x03' +
    '\x02\x02\x02\xE1\u0381\x03\x02\x02\x02\xE3\xE4\x07d\x02\x02\xE4\xE5\x07' +
    't\x02\x02\xE5\xE6\x07g\x02\x02\xE6\xE7\x07c\x02\x02\xE7\xE8\x07m\x02\x02' +
    '\xE8\x04\x03\x02\x02\x02\xE9\xEA\x07e\x02\x02\xEA\xEB\x07j\x02\x02\xEB' +
    '\xEC\x07c\x02\x02\xEC\xED\x07t\x02\x02\xED\x06\x03\x02\x02\x02\xEE\xEF' +
    '\x07e\x02\x02\xEF\xF0\x07q\x02\x02\xF0\xF1\x07p\x02\x02\xF1\xF2\x07u\x02' +
    '\x02\xF2\xF3\x07v\x02\x02\xF3\b\x03\x02\x02\x02\xF4\xF5\x07e\x02\x02\xF5' +
    '\xF6\x07q\x02\x02\xF6\xF7\x07p\x02\x02\xF7\xF8\x07v\x02\x02\xF8\xF9\x07' +
    'k\x02\x02\xF9\xFA\x07p\x02\x02\xFA\xFB\x07w\x02\x02\xFB\xFC\x07g\x02\x02' +
    '\xFC\n\x03\x02\x02\x02\xFD\xFE\x07f\x02\x02\xFE\xFF\x07q\x02\x02\xFF\f' +
    '\x03\x02\x02\x02\u0100\u0101\x07f\x02\x02\u0101\u0102\x07q\x02\x02\u0102' +
    '\u0103\x07w\x02\x02\u0103\u0104\x07d\x02\x02\u0104\u0105\x07n\x02\x02' +
    '\u0105\u0106\x07g\x02\x02\u0106\x0E\x03\x02\x02\x02\u0107\u0108\x07g\x02' +
    '\x02\u0108\u0109\x07n\x02\x02\u0109\u010A\x07u\x02\x02\u010A\u010B\x07' +
    'g\x02\x02\u010B\x10\x03\x02\x02\x02\u010C\u010D\x07h\x02\x02\u010D\u010E' +
    '\x07n\x02\x02\u010E\u010F\x07q\x02\x02\u010F\u0110\x07c\x02\x02\u0110' +
    '\u0111\x07v\x02\x02\u0111\x12\x03\x02\x02\x02\u0112\u0113\x07h\x02\x02' +
    '\u0113\u0114\x07q\x02\x02\u0114\u0115\x07t\x02\x02\u0115\x14\x03\x02\x02' +
    '\x02\u0116\u0117\x07k\x02\x02\u0117\u0118\x07h\x02\x02\u0118\x16\x03\x02' +
    '\x02\x02\u0119\u011A\x07k\x02\x02\u011A\u011B\x07p\x02\x02\u011B\u011C' +
    '\x07v\x02\x02\u011C\x18\x03\x02\x02\x02\u011D\u011E\x07n\x02\x02\u011E' +
    '\u011F\x07q\x02\x02\u011F\u0120\x07p\x02\x02\u0120\u0121\x07i\x02\x02' +
    '\u0121\x1A\x03\x02\x02\x02\u0122\u0123\x07t\x02\x02\u0123\u0124\x07g\x02' +
    '\x02\u0124\u0125\x07v\x02\x02\u0125\u0126\x07w\x02\x02\u0126\u0127\x07' +
    't\x02\x02\u0127\u0128\x07p\x02\x02\u0128\x1C\x03\x02\x02\x02\u0129\u012A' +
    '\x07u\x02\x02\u012A\u012B\x07j\x02\x02\u012B\u012C\x07q\x02\x02\u012C' +
    '\u012D\x07t\x02\x02\u012D\u012E\x07v\x02\x02\u012E\x1E\x03\x02\x02\x02' +
    '\u012F\u0130\x07u\x02\x02\u0130\u0131\x07k\x02\x02\u0131\u0132\x07i\x02' +
    '\x02\u0132\u0133\x07p\x02\x02\u0133\u0134\x07g\x02\x02\u0134\u0135\x07' +
    'f\x02\x02\u0135 \x03\x02\x02\x02\u0136\u0137\x07u\x02\x02\u0137\u0138' +
    '\x07k\x02\x02\u0138\u0139\x07|\x02\x02\u0139\u013A\x07g\x02\x02\u013A' +
    '\u013B\x07q\x02\x02\u013B\u013C\x07h\x02\x02\u013C"\x03\x02\x02\x02\u013D' +
    '\u013E\x07u\x02\x02\u013E\u013F\x07v\x02\x02\u013F\u0140\x07t\x02\x02' +
    '\u0140\u0141\x07w\x02\x02\u0141\u0142\x07e\x02\x02\u0142\u0143\x07v\x02' +
    '\x02\u0143$\x03\x02\x02\x02\u0144\u0145\x07w\x02\x02\u0145\u0146\x07p' +
    '\x02\x02\u0146\u0147\x07k\x02\x02\u0147\u0148\x07q\x02\x02\u0148\u0149' +
    '\x07p\x02\x02\u0149&\x03\x02\x02\x02\u014A\u014B\x07w\x02\x02\u014B\u014C' +
    '\x07p\x02\x02\u014C\u014D\x07u\x02\x02\u014D\u014E\x07k\x02\x02\u014E' +
    '\u014F\x07i\x02\x02\u014F\u0150\x07p\x02\x02\u0150\u0151\x07g\x02\x02' +
    '\u0151\u0152\x07f\x02\x02\u0152(\x03\x02\x02\x02\u0153\u0154\x07x\x02' +
    '\x02\u0154\u0155\x07q\x02\x02\u0155\u0156\x07k\x02\x02\u0156\u0157\x07' +
    'f\x02\x02\u0157*\x03\x02\x02\x02\u0158\u0159\x07y\x02\x02\u0159\u015A' +
    '\x07j\x02\x02\u015A\u015B\x07k\x02\x02\u015B\u015C\x07n\x02\x02\u015C' +
    '\u015D\x07g\x02\x02\u015D,\x03\x02\x02\x02\u015E\u015F\x07*\x02\x02\u015F' +
    '.\x03\x02\x02\x02\u0160\u0161\x07+\x02\x02\u01610\x03\x02\x02\x02\u0162' +
    '\u0163\x07]\x02\x02\u01632\x03\x02\x02\x02\u0164\u0165\x07_\x02\x02\u0165' +
    '4\x03\x02\x02\x02\u0166\u0167\x07}\x02\x02\u01676\x03\x02\x02\x02\u0168' +
    '\u0169\x07\x7F\x02\x02\u01698\x03\x02\x02\x02\u016A\u016B\x07>\x02\x02' +
    '\u016B:\x03\x02\x02\x02\u016C\u016D\x07>\x02\x02\u016D\u016E\x07?\x02' +
    '\x02\u016E<\x03\x02\x02\x02\u016F\u0170\x07@\x02\x02\u0170>\x03\x02\x02' +
    '\x02\u0171\u0172\x07@\x02\x02\u0172\u0173\x07?\x02\x02\u0173@\x03\x02' +
    '\x02\x02\u0174\u0175\x07>\x02\x02\u0175\u0176\x07>\x02\x02\u0176B\x03' +
    '\x02\x02\x02\u0177\u0178\x07@\x02\x02\u0178\u0179\x07@\x02\x02\u0179D' +
    '\x03\x02\x02\x02\u017A\u017B\x07-\x02\x02\u017BF\x03\x02\x02\x02\u017C' +
    '\u017D\x07-\x02\x02\u017D\u017E\x07-\x02\x02\u017EH\x03\x02\x02\x02\u017F' +
    '\u0180\x07/\x02\x02\u0180J\x03\x02\x02\x02\u0181\u0182\x07/\x02\x02\u0182' +
    '\u0183\x07/\x02\x02\u0183L\x03\x02\x02\x02\u0184\u0185\x07,\x02\x02\u0185' +
    'N\x03\x02\x02\x02\u0186\u0187\x071\x02\x02\u0187P\x03\x02\x02\x02\u0188' +
    "\u0189\x07'\x02\x02\u0189R\x03\x02\x02\x02\u018A\u018B\x07(\x02\x02\u018B" +
    'T\x03\x02\x02\x02\u018C\u018D\x07(\x02\x02\u018D\u018E\x07(\x02\x02\u018E' +
    'V\x03\x02\x02\x02\u018F\u0190\x07~\x02\x02\u0190\u0191\x07~\x02\x02\u0191' +
    'X\x03\x02\x02\x02\u0192\u0193\x07#\x02\x02\u0193Z\x03\x02\x02\x02\u0194' +
    '\u0195\x07A\x02\x02\u0195\\\x03\x02\x02\x02\u0196\u0197\x07<\x02\x02\u0197' +
    '^\x03\x02\x02\x02\u0198\u0199\x07=\x02\x02\u0199`\x03\x02\x02\x02\u019A' +
    '\u019B\x07.\x02\x02\u019Bb\x03\x02\x02\x02\u019C\u019D\x07?\x02\x02\u019D' +
    'd\x03\x02\x02\x02\u019E\u019F\x07,\x02\x02\u019F\u01A0\x07?\x02\x02\u01A0' +
    'f\x03\x02\x02\x02\u01A1\u01A2\x071\x02\x02\u01A2\u01A3\x07?\x02\x02\u01A3' +
    "h\x03\x02\x02\x02\u01A4\u01A5\x07'\x02\x02\u01A5\u01A6\x07?\x02\x02\u01A6" +
    'j\x03\x02\x02\x02\u01A7\u01A8\x07-\x02\x02\u01A8\u01A9\x07?\x02\x02\u01A9' +
    'l\x03\x02\x02\x02\u01AA\u01AB\x07/\x02\x02\u01AB\u01AC\x07?\x02\x02\u01AC' +
    'n\x03\x02\x02\x02\u01AD\u01AE\x07?\x02\x02\u01AE\u01AF\x07?\x02\x02\u01AF' +
    'p\x03\x02\x02\x02\u01B0\u01B1\x07#\x02\x02\u01B1\u01B2\x07?\x02\x02\u01B2' +
    'r\x03\x02\x02\x02\u01B3\u01B4\x07/\x02\x02\u01B4\u01B5\x07@\x02\x02\u01B5' +
    't\x03\x02\x02\x02\u01B6\u01B7\x070\x02\x02\u01B7v\x03\x02\x02\x02\u01B8' +
    "\u01BE\x05S*\x02\u01B9\u01BE\x05M'\x02\u01BA\u01BE\x05E#\x02\u01BB\u01BE" +
    '\x05I%\x02\u01BC\u01BE\x05Y-\x02\u01BD\u01B8\x03\x02\x02\x02\u01BD\u01B9' +
    '\x03\x02\x02\x02\u01BD\u01BA\x03\x02\x02\x02\u01BD\u01BB\x03\x02\x02\x02' +
    '\u01BD\u01BC\x03\x02\x02\x02\u01BEx\x03\x02\x02\x02\u01BF\u01C6\x05\x05' +
    '\x03\x02\u01C0\u01C6\x05\x1D\x0F\x02\u01C1\u01C6\x05\x17\f\x02\u01C2\u01C6' +
    '\x05\x19\r\x02\u01C3\u01C6\x05\x11\t\x02\u01C4\u01C6\x05\r\x07\x02\u01C5' +
    '\u01BF\x03\x02\x02\x02\u01C5\u01C0\x03\x02\x02\x02\u01C5\u01C1\x03\x02' +
    '\x02\x02\u01C5\u01C2\x03\x02\x02\x02\u01C5\u01C3\x03\x02\x02\x02\u01C5' +
    '\u01C4\x03\x02\x02\x02\u01C6z\x03\x02\x02\x02\u01C7\u01CC\x05}?\x02\u01C8' +
    '\u01CB\x05}?\x02\u01C9\u01CB\x05\x81A\x02\u01CA\u01C8\x03\x02\x02\x02' +
    '\u01CA\u01C9\x03\x02\x02\x02\u01CB\u01CE\x03\x02\x02\x02\u01CC\u01CA\x03' +
    '\x02'
  private static readonly _serializedATNSegment1: string =
    '\x02\x02\u01CC\u01CD\x03\x02\x02\x02\u01CD|\x03\x02\x02\x02\u01CE\u01CC' +
    '\x03\x02\x02\x02\u01CF\u01D2\x05\x7F@\x02\u01D0\u01D2\x05\x83B\x02\u01D1' +
    '\u01CF\x03\x02\x02\x02\u01D1\u01D0\x03\x02\x02\x02\u01D2~\x03\x02\x02' +
    '\x02\u01D3\u01D4\t\x02\x02\x02\u01D4\x80\x03\x02\x02\x02\u01D5\u01D6\t' +
    '\x03\x02\x02\u01D6\x82\x03\x02\x02\x02\u01D7\u01D8\x07^\x02\x02\u01D8' +
    '\u01D9\x07w\x02\x02\u01D9\u01DA\x03\x02\x02\x02\u01DA\u01E2\x05\x85C\x02' +
    '\u01DB\u01DC\x07^\x02\x02\u01DC\u01DD\x07W\x02\x02\u01DD\u01DE\x03\x02' +
    '\x02\x02\u01DE\u01DF\x05\x85C\x02\u01DF\u01E0\x05\x85C\x02\u01E0\u01E2' +
    '\x03\x02\x02\x02\u01E1\u01D7\x03\x02\x02\x02\u01E1\u01DB\x03\x02\x02\x02' +
    '\u01E2\x84\x03\x02\x02\x02\u01E3\u01E4\x05\x99M\x02\u01E4\u01E5\x05\x99' +
    'M\x02\u01E5\u01E6\x05\x99M\x02\u01E6\u01E7\x05\x99M\x02\u01E7\x86\x03' +
    '\x02\x02\x02\u01E8\u01EC\x05\x89E\x02\u01E9\u01EC\x05\xA3R\x02\u01EA\u01EC' +
    '\x05\xB9]\x02\u01EB\u01E8\x03\x02\x02\x02\u01EB\u01E9\x03\x02\x02\x02' +
    '\u01EB\u01EA\x03\x02\x02\x02\u01EC\x88\x03\x02\x02\x02\u01ED\u01EF\x05' +
    '\x8DG\x02\u01EE\u01F0\x05\x9BN\x02\u01EF\u01EE\x03\x02\x02\x02\u01EF\u01F0' +
    '\x03\x02\x02\x02\u01F0\u01FB\x03\x02\x02\x02\u01F1\u01F3\x05\x8FH\x02' +
    '\u01F2\u01F4\x05\x9BN\x02\u01F3\u01F2\x03\x02\x02\x02\u01F3\u01F4\x03' +
    '\x02\x02\x02\u01F4\u01FB\x03\x02\x02\x02\u01F5\u01F7\x05\x91I\x02\u01F6' +
    '\u01F8\x05\x9BN\x02\u01F7\u01F6\x03\x02\x02\x02\u01F7\u01F8\x03\x02\x02' +
    '\x02\u01F8\u01FB\x03\x02\x02\x02\u01F9\u01FB\x05\x8BF\x02\u01FA\u01ED' +
    '\x03\x02\x02\x02\u01FA\u01F1\x03\x02\x02\x02\u01FA\u01F5\x03\x02\x02\x02' +
    '\u01FA\u01F9\x03\x02\x02\x02\u01FB\x8A\x03\x02\x02\x02\u01FC\u01FD\x07' +
    '2\x02\x02\u01FD\u01FF\t\x04\x02\x02\u01FE\u0200\t\x05\x02\x02\u01FF\u01FE' +
    '\x03\x02\x02\x02\u0200\u0201\x03\x02\x02\x02\u0201\u01FF\x03\x02\x02\x02' +
    '\u0201\u0202\x03\x02\x02\x02\u0202\x8C\x03\x02\x02\x02\u0203\u0207\x05' +
    '\x95K\x02\u0204\u0206\x05\x81A\x02\u0205\u0204\x03\x02\x02\x02\u0206\u0209' +
    '\x03\x02\x02\x02\u0207\u0205\x03\x02\x02\x02\u0207\u0208\x03\x02\x02\x02' +
    '\u0208\x8E\x03\x02\x02\x02\u0209\u0207\x03\x02\x02\x02\u020A\u020E\x07' +
    '2\x02\x02\u020B\u020D\x05\x97L\x02\u020C\u020B\x03\x02\x02\x02\u020D\u0210' +
    '\x03\x02\x02\x02\u020E\u020C\x03\x02\x02\x02\u020E\u020F\x03\x02\x02\x02' +
    '\u020F\x90\x03\x02\x02\x02\u0210\u020E\x03\x02\x02\x02\u0211\u0213\x05' +
    '\x93J\x02\u0212\u0214\x05\x99M\x02\u0213\u0212\x03\x02\x02\x02\u0214\u0215' +
    '\x03\x02\x02\x02\u0215\u0213\x03\x02\x02\x02\u0215\u0216\x03\x02\x02\x02' +
    '\u0216\x92\x03\x02\x02\x02\u0217\u0218\x072\x02\x02\u0218\u0219\t\x06' +
    '\x02\x02\u0219\x94\x03\x02\x02\x02\u021A\u021B\t\x07\x02\x02\u021B\x96' +
    '\x03\x02\x02\x02\u021C\u021D\t\b\x02\x02\u021D\x98\x03\x02\x02\x02\u021E' +
    '\u021F\t\t\x02\x02\u021F\x9A\x03\x02\x02\x02\u0220\u0222\x05\x9DO\x02' +
    '\u0221\u0223\x05\x9FP\x02\u0222\u0221\x03\x02\x02\x02\u0222\u0223\x03' +
    '\x02\x02\x02\u0223\u0230\x03\x02\x02\x02\u0224\u0225\x05\x9DO\x02\u0225' +
    '\u0226\x05\xA1Q\x02\u0226\u0230\x03\x02\x02\x02\u0227\u0229\x05\x9FP\x02' +
    '\u0228\u022A\x05\x9DO\x02\u0229\u0228\x03\x02\x02\x02\u0229\u022A\x03' +
    '\x02\x02\x02\u022A\u0230\x03\x02\x02\x02\u022B\u022D\x05\xA1Q\x02\u022C' +
    '\u022E\x05\x9DO\x02\u022D\u022C\x03\x02\x02\x02\u022D\u022E\x03\x02\x02' +
    '\x02\u022E\u0230\x03\x02\x02\x02\u022F\u0220\x03\x02\x02\x02\u022F\u0224' +
    '\x03\x02\x02\x02\u022F\u0227\x03\x02\x02\x02\u022F\u022B\x03\x02\x02\x02' +
    '\u0230\x9C\x03\x02\x02\x02\u0231\u0232\t\n\x02\x02\u0232\x9E\x03\x02\x02' +
    '\x02\u0233\u0234\t\v\x02\x02\u0234\xA0\x03\x02\x02\x02\u0235\u0236\x07' +
    'n\x02\x02\u0236\u023A\x07n\x02\x02\u0237\u0238\x07N\x02\x02\u0238\u023A' +
    '\x07N\x02\x02\u0239\u0235\x03\x02\x02\x02\u0239\u0237\x03\x02\x02\x02' +
    '\u023A\xA2\x03\x02\x02\x02\u023B\u023E\x05\xA5S\x02\u023C\u023E\x05\xA7' +
    'T\x02\u023D\u023B\x03\x02\x02\x02\u023D\u023C\x03\x02\x02\x02\u023E\xA4' +
    '\x03\x02\x02\x02\u023F\u0241\x05\xA9U\x02\u0240\u0242\x05\xABV\x02\u0241' +
    '\u0240\x03\x02\x02\x02\u0241\u0242\x03\x02\x02\x02\u0242\u0244\x03\x02' +
    '\x02\x02\u0243\u0245\x05\xB7\\\x02\u0244\u0243\x03\x02\x02\x02\u0244\u0245' +
    '\x03\x02\x02\x02\u0245\u024C\x03\x02\x02\x02\u0246\u0247\x05\xAFX\x02' +
    '\u0247\u0249\x05\xABV\x02\u0248\u024A\x05\xB7\\\x02\u0249\u0248\x03\x02' +
    '\x02\x02\u0249\u024A\x03\x02\x02\x02\u024A\u024C\x03\x02\x02\x02\u024B' +
    '\u023F\x03\x02\x02\x02\u024B\u0246\x03\x02\x02\x02\u024C\xA6\x03\x02\x02' +
    '\x02\u024D\u0250\x05\x93J\x02\u024E\u0251\x05\xB1Y\x02\u024F\u0251\x05' +
    '\xB5[\x02\u0250\u024E\x03\x02\x02\x02\u0250\u024F\x03\x02\x02\x02\u0251' +
    '\u0252\x03\x02\x02\x02\u0252\u0254\x05\xB3Z\x02\u0253\u0255\x05\xB7\\' +
    '\x02\u0254\u0253\x03\x02\x02\x02\u0254\u0255\x03\x02\x02\x02\u0255\xA8' +
    '\x03\x02\x02\x02\u0256\u0258\x05\xAFX\x02\u0257\u0256\x03\x02\x02\x02' +
    '\u0257\u0258\x03\x02\x02\x02\u0258\u0259\x03\x02\x02\x02\u0259\u025A\x07' +
    '0\x02\x02\u025A\u025F\x05\xAFX\x02\u025B\u025C\x05\xAFX\x02\u025C\u025D' +
    '\x070\x02\x02\u025D\u025F\x03\x02\x02\x02\u025E\u0257\x03\x02\x02\x02' +
    '\u025E\u025B\x03\x02\x02\x02\u025F\xAA\x03\x02\x02\x02\u0260\u0262\t\f' +
    '\x02\x02\u0261\u0263\x05\xADW\x02\u0262\u0261\x03\x02\x02\x02\u0262\u0263' +
    '\x03\x02\x02\x02\u0263\u0264\x03\x02\x02\x02\u0264\u0265\x05\xAFX\x02' +
    '\u0265\xAC\x03\x02\x02\x02\u0266\u0267\t\r\x02\x02\u0267\xAE\x03\x02\x02' +
    '\x02\u0268\u026A\x05\x81A\x02\u0269\u0268\x03\x02\x02\x02\u026A\u026B' +
    '\x03\x02\x02\x02\u026B\u0269\x03\x02\x02\x02\u026B\u026C\x03\x02\x02\x02' +
    '\u026C\xB0\x03\x02\x02\x02\u026D\u026F\x05\xB5[\x02\u026E\u026D\x03\x02' +
    '\x02\x02\u026E\u026F\x03\x02\x02\x02\u026F\u0270\x03\x02\x02\x02\u0270' +
    '\u0271\x070\x02\x02\u0271\u0276\x05\xB5[\x02\u0272\u0273\x05\xB5[\x02' +
    '\u0273\u0274\x070\x02\x02\u0274\u0276\x03\x02\x02\x02\u0275\u026E\x03' +
    '\x02\x02\x02\u0275\u0272\x03\x02\x02\x02\u0276\xB2\x03\x02\x02\x02\u0277' +
    '\u0279\t\x0E\x02\x02\u0278\u027A\x05\xADW\x02\u0279\u0278\x03\x02\x02' +
    '\x02\u0279\u027A\x03\x02\x02\x02\u027A\u027B\x03\x02\x02\x02\u027B\u027C' +
    '\x05\xAFX\x02\u027C\xB4\x03\x02\x02\x02\u027D\u027F\x05\x99M\x02\u027E' +
    '\u027D\x03\x02\x02\x02\u027F\u0280\x03\x02\x02\x02\u0280\u027E\x03\x02' +
    '\x02\x02\u0280\u0281\x03\x02\x02\x02\u0281\xB6\x03\x02\x02\x02\u0282\u0283' +
    '\t\x0F\x02\x02\u0283\xB8\x03\x02\x02\x02\u0284\u0285\x07)\x02\x02\u0285' +
    '\u0286\x05\xBB^\x02\u0286\u0287\x07)\x02\x02\u0287\u029B\x03\x02\x02\x02' +
    '\u0288\u0289\x07N\x02\x02\u0289\u028A\x07)\x02\x02\u028A\u028B\x03\x02' +
    '\x02\x02\u028B\u028C\x05\xBB^\x02\u028C\u028D\x07)\x02\x02\u028D\u029B' +
    '\x03\x02\x02\x02\u028E\u028F\x07w\x02\x02\u028F\u0290\x07)\x02\x02\u0290' +
    '\u0291\x03\x02\x02\x02\u0291\u0292\x05\xBB^\x02\u0292\u0293\x07)\x02\x02' +
    '\u0293\u029B\x03\x02\x02\x02\u0294\u0295\x07W\x02\x02\u0295\u0296\x07' +
    ')\x02\x02\u0296\u0297\x03\x02\x02\x02\u0297\u0298\x05\xBB^\x02\u0298\u0299' +
    '\x07)\x02\x02\u0299\u029B\x03\x02\x02\x02\u029A\u0284\x03\x02\x02\x02' +
    '\u029A\u0288\x03\x02\x02\x02\u029A\u028E\x03\x02\x02\x02\u029A\u0294\x03' +
    '\x02\x02\x02\u029B\xBA\x03\x02\x02\x02\u029C\u029E\x05\xBD_\x02\u029D' +
    '\u029C\x03\x02\x02\x02\u029E\u029F\x03\x02\x02\x02\u029F\u029D\x03\x02' +
    '\x02\x02\u029F\u02A0\x03\x02\x02\x02\u02A0\xBC\x03\x02\x02\x02\u02A1\u02A4' +
    '\n\x10\x02\x02\u02A2\u02A4\x05\xBF`\x02\u02A3\u02A1\x03\x02\x02\x02\u02A3' +
    '\u02A2\x03\x02\x02\x02\u02A4\xBE\x03\x02\x02\x02\u02A5\u02AA\x05\xC1a' +
    '\x02\u02A6\u02AA\x05\xC3b\x02\u02A7\u02AA\x05\xC5c\x02\u02A8\u02AA\x05' +
    '\x83B\x02\u02A9\u02A5\x03\x02\x02\x02\u02A9\u02A6\x03\x02\x02\x02\u02A9' +
    '\u02A7\x03\x02\x02\x02\u02A9\u02A8\x03\x02\x02\x02\u02AA\xC0\x03\x02\x02' +
    '\x02\u02AB\u02AC\x07^\x02\x02\u02AC\u02AD\t\x11\x02\x02\u02AD\xC2\x03' +
    '\x02\x02\x02\u02AE\u02AF\x07^\x02\x02\u02AF\u02B1\x05\x97L\x02\u02B0\u02B2' +
    '\x05\x97L\x02\u02B1\u02B0\x03\x02\x02\x02\u02B1\u02B2\x03\x02\x02\x02' +
    '\u02B2\u02B4\x03\x02\x02\x02\u02B3\u02B5\x05\x97L\x02\u02B4\u02B3\x03' +
    '\x02\x02\x02\u02B4\u02B5\x03\x02\x02\x02\u02B5\xC4\x03\x02\x02\x02\u02B6' +
    '\u02B7\x07^\x02\x02\u02B7\u02B8\x07z\x02\x02\u02B8\u02BA\x03\x02\x02\x02' +
    '\u02B9\u02BB\x05\x99M\x02\u02BA\u02B9\x03\x02\x02\x02\u02BB\u02BC\x03' +
    '\x02\x02\x02\u02BC\u02BA\x03\x02\x02\x02\u02BC\u02BD\x03\x02\x02\x02\u02BD' +
    '\xC6\x03\x02\x02\x02\u02BE\u02C0\x05\xC9e\x02\u02BF\u02BE\x03\x02\x02' +
    '\x02\u02BF\u02C0\x03\x02\x02\x02\u02C0\u02C1\x03\x02\x02\x02\u02C1\u02C3' +
    '\x07$\x02\x02\u02C2\u02C4\x05\xCBf\x02\u02C3\u02C2\x03\x02\x02\x02\u02C3' +
    '\u02C4\x03\x02\x02\x02\u02C4\u02C5\x03\x02\x02\x02\u02C5\u02C6\x07$\x02' +
    '\x02\u02C6\xC8\x03\x02\x02\x02\u02C7\u02C8\x07w\x02\x02\u02C8\u02CB\x07' +
    ':\x02\x02\u02C9\u02CB\t\x12\x02\x02\u02CA\u02C7\x03\x02\x02\x02\u02CA' +
    '\u02C9\x03\x02\x02\x02\u02CB\xCA\x03\x02\x02\x02\u02CC\u02CE\x05\xCDg' +
    '\x02\u02CD\u02CC\x03\x02\x02\x02\u02CE\u02CF\x03\x02\x02\x02\u02CF\u02CD' +
    '\x03\x02\x02\x02\u02CF\u02D0\x03\x02\x02\x02\u02D0\xCC\x03\x02\x02\x02' +
    '\u02D1\u02D9\n\x13\x02\x02\u02D2\u02D9\x05\xBF`\x02\u02D3\u02D4\x07^\x02' +
    '\x02\u02D4\u02D9\x07\f\x02\x02\u02D5\u02D6\x07^\x02\x02\u02D6\u02D7\x07' +
    '\x0F\x02\x02\u02D7\u02D9\x07\f\x02\x02\u02D8\u02D1\x03\x02\x02\x02\u02D8' +
    '\u02D2\x03\x02\x02\x02\u02D8\u02D3\x03\x02\x02\x02\u02D8\u02D5\x03\x02' +
    '\x02\x02\u02D9\xCE\x03\x02\x02\x02\u02DA\u02DC\x07%\x02\x02\u02DB\u02DD' +
    '\x05\xDBn\x02\u02DC\u02DB\x03\x02\x02\x02\u02DC\u02DD\x03\x02\x02\x02' +
    '\u02DD\u02DE\x03\x02\x02\x02\u02DE\u02DF\x07f\x02\x02\u02DF\u02E0\x07' +
    'g\x02\x02\u02E0\u02E1\x07h\x02\x02\u02E1\u02E2\x07k\x02\x02\u02E2\u02E3' +
    '\x07p\x02\x02\u02E3\u02E4\x07g\x02\x02\u02E4\u02E8\x03\x02\x02\x02\u02E5' +
    '\u02E7\n\x14\x02\x02\u02E6\u02E5\x03\x02\x02\x02\u02E7\u02EA\x03\x02\x02' +
    '\x02\u02E8\u02E6\x03\x02\x02\x02\u02E8\u02E9\x03\x02\x02\x02\u02E9\u02EB' +
    '\x03\x02\x02\x02\u02EA\u02E8\x03\x02\x02\x02\u02EB\u02EC\bh\x02\x02\u02EC' +
    '\xD0\x03\x02\x02\x02\u02ED\u02EF\x07%\x02\x02\u02EE\u02F0\x05\xDBn\x02' +
    '\u02EF\u02EE\x03\x02\x02\x02\u02EF\u02F0\x03\x02\x02\x02\u02F0\u02F1\x03' +
    '\x02\x02\x02\u02F1\u02F2\x07k\x02\x02\u02F2\u02F3\x07p\x02\x02\u02F3\u02F4' +
    '\x07e\x02\x02\u02F4\u02F5\x07n\x02\x02\u02F5\u02F6\x07w\x02\x02\u02F6' +
    '\u02F7\x07f\x02\x02\u02F7\u02F8\x07g\x02\x02\u02F8\u02FA\x03\x02\x02\x02' +
    '\u02F9\u02FB\x05\xDBn\x02\u02FA\u02F9\x03\x02\x02\x02\u02FA\u02FB\x03' +
    '\x02\x02\x02\u02FB\u030C\x03\x02\x02\x02\u02FC\u0300\x07$\x02\x02\u02FD' +
    '\u02FF\n\x15\x02\x02\u02FE\u02FD\x03\x02\x02\x02\u02FF\u0302\x03\x02\x02' +
    '\x02\u0300\u02FE\x03\x02\x02\x02\u0300\u0301\x03\x02\x02\x02\u0301\u0303' +
    '\x03\x02\x02\x02\u0302\u0300\x03\x02\x02\x02\u0303\u030D\x07$\x02\x02' +
    '\u0304\u0308\x07>\x02\x02\u0305\u0307\n\x15\x02\x02\u0306\u0305\x03\x02' +
    '\x02\x02\u0307\u030A\x03\x02\x02\x02\u0308\u0306\x03\x02\x02\x02\u0308' +
    '\u0309\x03\x02\x02\x02\u0309\u030B\x03\x02\x02\x02\u030A\u0308\x03\x02' +
    '\x02\x02\u030B\u030D\x07@\x02\x02\u030C\u02FC\x03\x02\x02\x02\u030C\u0304' +
    '\x03\x02\x02\x02\u030D\u030F\x03\x02\x02\x02\u030E\u0310\x05\xDBn\x02' +
    '\u030F\u030E\x03\x02\x02\x02\u030F\u0310\x03\x02\x02\x02\u0310\u0311\x03' +
    '\x02\x02\x02\u0311\u0312\x05\xDDo\x02\u0312\u0313\x03\x02\x02\x02\u0313' +
    '\u0314\bi\x02\x02\u0314\xD2\x03\x02\x02\x02\u0315\u0316\x07c\x02\x02\u0316' +
    '\u0317\x07u\x02\x02\u0317\u0318\x07o\x02\x02\u0318\u031C\x03\x02\x02\x02' +
    '\u0319\u031B\n\x16\x02\x02\u031A\u0319\x03\x02\x02\x02\u031B\u031E\x03' +
    '\x02\x02\x02\u031C\u031A\x03\x02\x02\x02\u031C\u031D\x03\x02\x02\x02\u031D' +
    '\u031F\x03\x02\x02\x02\u031E\u031C\x03\x02\x02\x02\u031F\u0323\x07}\x02' +
    '\x02\u0320\u0322\n\x17\x02\x02\u0321\u0320\x03\x02\x02\x02\u0322\u0325' +
    '\x03\x02\x02\x02\u0323\u0321\x03\x02\x02\x02\u0323\u0324\x03\x02\x02\x02' +
    '\u0324\u0326\x03\x02\x02\x02\u0325\u0323\x03\x02\x02\x02\u0326\u0327\x07' +
    '\x7F\x02\x02\u0327\u0328\x03\x02\x02\x02\u0328\u0329\bj\x02\x02\u0329' +
    '\xD4\x03\x02\x02\x02\u032A\u032B\x07%\x02\x02\u032B\u032C\x07n\x02\x02' +
    '\u032C\u032D\x07k\x02\x02\u032D\u032E\x07p\x02\x02\u032E\u032F\x07g\x02' +
    '\x02\u032F\u0333\x03\x02\x02\x02\u0330\u0332\x05\xDBn\x02\u0331\u0330' +
    '\x03\x02\x02\x02\u0332\u0335\x03\x02\x02\x02\u0333\u0331\x03\x02\x02\x02' +
    '\u0333\u0334\x03\x02\x02\x02\u0334\u0339\x03\x02\x02\x02\u0335\u0333\x03' +
    '\x02\x02\x02\u0336\u0338\n\x15\x02\x02\u0337\u0336\x03\x02\x02\x02\u0338' +
    '\u033B\x03\x02\x02\x02\u0339\u0337\x03\x02\x02\x02\u0339\u033A\x03\x02' +
    '\x02\x02\u033A\u033C\x03\x02\x02\x02\u033B\u0339\x03\x02\x02\x02\u033C' +
    '\u033D\bk\x02\x02\u033D\xD6\x03\x02\x02\x02\u033E\u0340\x07%\x02\x02\u033F' +
    '\u0341\x05\xDBn\x02\u0340\u033F\x03\x02\x02\x02\u0340\u0341\x03\x02\x02' +
    '\x02\u0341\u0342\x03\x02\x02\x02\u0342\u0344\x05\x8DG\x02\u0343\u0345' +
    '\x05\xDBn\x02\u0344\u0343\x03\x02\x02\x02\u0344\u0345\x03\x02\x02\x02' +
    '\u0345\u0346\x03\x02\x02\x02\u0346\u034A\x05\xC7d\x02\u0347\u0349\n\x15' +
    '\x02\x02\u0348\u0347\x03\x02\x02\x02\u0349\u034C\x03\x02\x02\x02\u034A' +
    '\u0348\x03\x02\x02\x02\u034A\u034B\x03\x02\x02\x02\u034B\u034D\x03\x02' +
    '\x02\x02\u034C\u034A\x03\x02\x02\x02\u034D\u034E\bl\x02\x02\u034E\xD8' +
    '\x03\x02\x02\x02\u034F\u0351\x07%\x02\x02\u0350\u0352\x05\xDBn\x02\u0351' +
    '\u0350\x03\x02\x02\x02\u0351\u0352\x03\x02\x02\x02\u0352\u0353\x03\x02' +
    '\x02\x02\u0353\u0354\x07r\x02\x02\u0354\u0355\x07t\x02\x02\u0355\u0356' +
    '\x07c\x02\x02\u0356\u0357\x07i\x02\x02\u0357\u0358\x07o\x02\x02\u0358' +
    '\u0359\x07c\x02\x02\u0359\u035A\x03\x02\x02\x02\u035A\u035E\x05\xDBn\x02' +
    '\u035B\u035D\n\x15\x02\x02\u035C\u035B\x03\x02\x02\x02\u035D\u0360\x03' +
    '\x02\x02\x02\u035E\u035C\x03\x02\x02\x02\u035E\u035F\x03\x02\x02\x02\u035F' +
    '\u0361\x03\x02\x02\x02\u0360\u035E\x03\x02\x02\x02\u0361\u0362\bm\x02' +
    '\x02\u0362\xDA\x03\x02\x02\x02\u0363\u0365\t\x18\x02\x02\u0364\u0363\x03' +
    '\x02\x02\x02\u0365\u0366\x03\x02\x02\x02\u0366\u0364\x03\x02\x02\x02\u0366' +
    '\u0367\x03\x02\x02\x02\u0367\u0368\x03\x02\x02\x02\u0368\u0369\bn\x02' +
    '\x02\u0369\xDC\x03\x02\x02\x02\u036A\u036C\x07\x0F\x02\x02\u036B\u036D' +
    '\x07\f\x02\x02\u036C\u036B\x03\x02\x02\x02\u036C\u036D\x03\x02\x02\x02' +
    '\u036D\u0370\x03\x02\x02\x02\u036E\u0370\x07\f\x02\x02\u036F\u036A\x03' +
    '\x02\x02\x02\u036F\u036E\x03\x02\x02\x02\u0370\u0371\x03\x02\x02\x02\u0371' +
    '\u0372\bo\x02\x02\u0372\xDE\x03\x02\x02\x02\u0373\u0374\x071\x02\x02\u0374' +
    '\u0375\x07,\x02\x02\u0375\u0379\x03\x02\x02\x02\u0376\u0378\v\x02\x02' +
    '\x02\u0377\u0376\x03\x02\x02\x02\u0378\u037B\x03\x02\x02\x02\u0379\u037A' +
    '\x03\x02\x02\x02\u0379\u0377\x03\x02\x02\x02\u037A\u037C\x03\x02\x02\x02' +
    '\u037B\u0379\x03\x02\x02\x02\u037C\u037D\x07,\x02\x02\u037D\u037E\x07' +
    '1\x02\x02\u037E\u037F\x03\x02\x02\x02\u037F\u0380\bp\x02\x02\u0380\xE0' +
    '\x03\x02\x02\x02\u0381\u0382\x071\x02\x02\u0382\u0383\x071\x02\x02\u0383' +
    '\u0387\x03\x02\x02\x02\u0384\u0386\n\x15\x02\x02\u0385\u0384\x03\x02\x02' +
    '\x02\u0386\u0389\x03\x02\x02\x02\u0387\u0385\x03\x02\x02\x02\u0387\u0388' +
    '\x03\x02\x02\x02\u0388\u038A\x03\x02\x02\x02\u0389\u0387\x03\x02\x02\x02' +
    '\u038A\u038B\bq\x02\x02\u038B\xE2\x03\x02\x02\x02H\x02\u01BD\u01C5\u01CA' +
    '\u01CC\u01D1\u01E1\u01EB\u01EF\u01F3\u01F7\u01FA\u0201\u0207\u020E\u0215' +
    '\u0222\u0229\u022D\u022F\u0239\u023D\u0241\u0244\u0249\u024B\u0250\u0254' +
    '\u0257\u025E\u0262\u026B\u026E\u0275\u0279\u0280\u029A\u029F\u02A3\u02A9' +
    '\u02B1\u02B4\u02BC\u02BF\u02C3\u02CA\u02CF\u02D8\u02DC\u02E8\u02EF\u02FA' +
    '\u0300\u0308\u030C\u030F\u031C\u0323\u0333\u0339\u0340\u0344\u034A\u0351' +
    '\u035E\u0366\u036C\u036F\u0379\u0387\x03\b\x02\x02'
  public static readonly _serializedATN: string = Utils.join(
    [SourCLexer._serializedATNSegment0, SourCLexer._serializedATNSegment1],
    ''
  )
  public static __ATN: ATN
  public static get _ATN(): ATN {
    if (!SourCLexer.__ATN) {
      SourCLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(SourCLexer._serializedATN)
      )
    }

    return SourCLexer.__ATN
  }
}
